/*{
	"type": "action",
	"targets": ["omnifocus"],
	"author": "Roman Dek",
	"identifier": "com.romandek.of.priorities2",
	"version": "1.1",
	"description": "Reassign priorities to all qualifying tasks according to how many days remain until the effective due date.",
	"label": "Reassing priorities",
	"shortLabel": "Reassing priorities"
}*/

(() => {
	var action = new PlugIn.Action(function(selection, sender){

		var p1Threshold = 2;
		var p2Threshold = 4;
		var p3Threshold = 6;

		var p  = "Priority";
		var p1 = "P1 — Critical";
    	var p2 = "P2 — Move the needle";
    	var p3 = "P3 — Support";
    	//var p4 = "P4 — Maintenance";

    	var pTag = tagNamed(p);
        var p1Tag = pTag.tagNamed(p1);
        var p2Tag = pTag.tagNamed(p2);
        var p3Tag = pTag.tagNamed(p3);
        //var p4Tag = pTag.tagNamed(p4);

        var pTags = [p1Tag, p2Tag, p3Tag];

        var t0 = new Date().getTime()

		var qualifiedTasks = flattenedTasks.filter(task => task.effectiveCompletedDate == null && task.effectiveDropDate == null && task.effectiveDueDate != null &&
														   task.containingProject != null && task.containingProject.tags.byName("Template") == null &&
		   												   (task.tags.byName(p1) != null || task.tags.byName(p2) != null || task.tags.byName(p3) != null));

		var t1 = new Date().getTime()
		console.log("Call to doSomething took " + (t1 - t0) + " milliseconds.")

		console.log(qualifiedTasks.length);


		var t0 = new Date().getTime()

		var today = new Date();
			today.setHours(18,0,0);

		qualifiedTasks.forEach(task => {

			var dateDelta = (task.effectiveDueDate - today)/8.64e7;
			
			if (dateDelta <= p3Threshold) {

				task.removeTags(pTags);				

				if (dateDelta <= p1Threshold) {
					task.addTag(p1Tag);
				}
				else if (dateDelta <= p2Threshold) {
					task.addTag(p2Tag);
				}
				else {
					task.addTag(p3Tag);
				}	
			}
			
		});

		var t1 = new Date().getTime()
		console.log("Call to doSomething took " + (t1 - t0) + " milliseconds.")

	});

	action.validate = function(selection, sender){
		// selection options: tasks, projects, folders, tags
		return true
	};
	
	return action;
})();